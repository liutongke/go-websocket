// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        v3.17.3
// source: app_game.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 包含人名的一个请求消息
type SendToUserMsgToLocalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Data   []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SendToUserMsgToLocalRequest) Reset() {
	*x = SendToUserMsgToLocalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_game_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendToUserMsgToLocalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendToUserMsgToLocalRequest) ProtoMessage() {}

func (x *SendToUserMsgToLocalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_game_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendToUserMsgToLocalRequest.ProtoReflect.Descriptor instead.
func (*SendToUserMsgToLocalRequest) Descriptor() ([]byte, []int) {
	return file_app_game_proto_rawDescGZIP(), []int{0}
}

func (x *SendToUserMsgToLocalRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SendToUserMsgToLocalRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SendUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendUserReply) Reset() {
	*x = SendUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_game_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendUserReply) ProtoMessage() {}

func (x *SendUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_game_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendUserReply.ProtoReflect.Descriptor instead.
func (*SendUserReply) Descriptor() ([]byte, []int) {
	return file_app_game_proto_rawDescGZIP(), []int{1}
}

// 包含人名的一个请求消息
type SendToGroupMsgToLocalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId int64  `protobuf:"varint,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SendToGroupMsgToLocalRequest) Reset() {
	*x = SendToGroupMsgToLocalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_game_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendToGroupMsgToLocalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendToGroupMsgToLocalRequest) ProtoMessage() {}

func (x *SendToGroupMsgToLocalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_game_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendToGroupMsgToLocalRequest.ProtoReflect.Descriptor instead.
func (*SendToGroupMsgToLocalRequest) Descriptor() ([]byte, []int) {
	return file_app_game_proto_rawDescGZIP(), []int{2}
}

func (x *SendToGroupMsgToLocalRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *SendToGroupMsgToLocalRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SendGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendGroupReply) Reset() {
	*x = SendGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_game_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupReply) ProtoMessage() {}

func (x *SendGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_game_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupReply.ProtoReflect.Descriptor instead.
func (*SendGroupReply) Descriptor() ([]byte, []int) {
	return file_app_game_proto_rawDescGZIP(), []int{3}
}

// 包含人名的一个请求消息
type HelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_game_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_game_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_app_game_proto_rawDescGZIP(), []int{4}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

//    包含问候语的响应消息
type HelloReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_game_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_game_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_app_game_proto_rawDescGZIP(), []int{5}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_app_game_proto protoreflect.FileDescriptor

var file_app_game_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x70, 0x70, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x22, 0x49, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x0f, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x4c, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x73, 0x67, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x10,
	0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x22, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x0a, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xd8, 0x01, 0x0a,
	0x07, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x53, 0x61, 0x79, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x6c, 0x6c,
	0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x73, 0x67, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12,
	0x20, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x73, 0x67, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_app_game_proto_rawDescOnce sync.Once
	file_app_game_proto_rawDescData = file_app_game_proto_rawDesc
)

func file_app_game_proto_rawDescGZIP() []byte {
	file_app_game_proto_rawDescOnce.Do(func() {
		file_app_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_game_proto_rawDescData)
	})
	return file_app_game_proto_rawDescData
}

var file_app_game_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_app_game_proto_goTypes = []interface{}{
	(*SendToUserMsgToLocalRequest)(nil),  // 0: pb.SendToUserMsgToLocalRequest
	(*SendUserReply)(nil),                // 1: pb.SendUserReply
	(*SendToGroupMsgToLocalRequest)(nil), // 2: pb.SendToGroupMsgToLocalRequest
	(*SendGroupReply)(nil),               // 3: pb.SendGroupReply
	(*HelloRequest)(nil),                 // 4: pb.HelloRequest
	(*HelloReply)(nil),                   // 5: pb.HelloReply
}
var file_app_game_proto_depIdxs = []int32{
	4, // 0: pb.Greeter.SayHello:input_type -> pb.HelloRequest
	0, // 1: pb.Greeter.SendToUserMsgToLocal:input_type -> pb.SendToUserMsgToLocalRequest
	2, // 2: pb.Greeter.SendToGroupMsgToLocal:input_type -> pb.SendToGroupMsgToLocalRequest
	5, // 3: pb.Greeter.SayHello:output_type -> pb.HelloReply
	1, // 4: pb.Greeter.SendToUserMsgToLocal:output_type -> pb.SendUserReply
	3, // 5: pb.Greeter.SendToGroupMsgToLocal:output_type -> pb.SendGroupReply
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_app_game_proto_init() }
func file_app_game_proto_init() {
	if File_app_game_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_app_game_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendToUserMsgToLocalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_game_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_game_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendToGroupMsgToLocalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_game_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_game_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_game_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_game_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_app_game_proto_goTypes,
		DependencyIndexes: file_app_game_proto_depIdxs,
		MessageInfos:      file_app_game_proto_msgTypes,
	}.Build()
	File_app_game_proto = out.File
	file_app_game_proto_rawDesc = nil
	file_app_game_proto_goTypes = nil
	file_app_game_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	// SayHello 方法
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	SendToUserMsgToLocal(ctx context.Context, in *SendToUserMsgToLocalRequest, opts ...grpc.CallOption) (*SendUserReply, error)
	SendToGroupMsgToLocal(ctx context.Context, in *SendToGroupMsgToLocalRequest, opts ...grpc.CallOption) (*SendGroupReply, error)
}

type greeterClient struct {
	cc grpc.ClientConnInterface
}

func NewGreeterClient(cc grpc.ClientConnInterface) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, "/pb.Greeter/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) SendToUserMsgToLocal(ctx context.Context, in *SendToUserMsgToLocalRequest, opts ...grpc.CallOption) (*SendUserReply, error) {
	out := new(SendUserReply)
	err := c.cc.Invoke(ctx, "/pb.Greeter/SendToUserMsgToLocal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) SendToGroupMsgToLocal(ctx context.Context, in *SendToGroupMsgToLocalRequest, opts ...grpc.CallOption) (*SendGroupReply, error) {
	out := new(SendGroupReply)
	err := c.cc.Invoke(ctx, "/pb.Greeter/SendToGroupMsgToLocal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	// SayHello 方法
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
	SendToUserMsgToLocal(context.Context, *SendToUserMsgToLocalRequest) (*SendUserReply, error)
	SendToGroupMsgToLocal(context.Context, *SendToGroupMsgToLocalRequest) (*SendGroupReply, error)
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) SayHello(context.Context, *HelloRequest) (*HelloReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (*UnimplementedGreeterServer) SendToUserMsgToLocal(context.Context, *SendToUserMsgToLocalRequest) (*SendUserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendToUserMsgToLocal not implemented")
}
func (*UnimplementedGreeterServer) SendToGroupMsgToLocal(context.Context, *SendToGroupMsgToLocalRequest) (*SendGroupReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendToGroupMsgToLocal not implemented")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Greeter/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_SendToUserMsgToLocal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendToUserMsgToLocalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SendToUserMsgToLocal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Greeter/SendToUserMsgToLocal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SendToUserMsgToLocal(ctx, req.(*SendToUserMsgToLocalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_SendToGroupMsgToLocal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendToGroupMsgToLocalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SendToGroupMsgToLocal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Greeter/SendToGroupMsgToLocal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SendToGroupMsgToLocal(ctx, req.(*SendToGroupMsgToLocalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Greeter_SayHello_Handler,
		},
		{
			MethodName: "SendToUserMsgToLocal",
			Handler:    _Greeter_SendToUserMsgToLocal_Handler,
		},
		{
			MethodName: "SendToGroupMsgToLocal",
			Handler:    _Greeter_SendToGroupMsgToLocal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app_game.proto",
}
